-- 1. Listar os participantes com mais de 0 certificados emitidos
SELECT P.NM_PARTICIPANTE, COUNT(*) AS QTDE_CERTIFICADOS
FROM TB_PARTICIPANTE P
JOIN TB_CERTIFICADO C ON C.ID_PARTICIPANTE = P.ID_PARTICIPANTE
GROUP BY P.ID_PARTICIPANTE
HAVING COUNT(*) > 0;

-- 2. Obter a média de participantes por atividade
SELECT AVG(QTDE_PARTICIPANTES) AS MEDIA
FROM (
  SELECT ID_ATIVIDADE, COUNT(*) AS QTDE_PARTICIPANTES
  FROM RL_PARTICIPANTE_ATIVIDADE
  GROUP BY ID_ATIVIDADE
) AS SUB;

-- 3. Recuperar os eventos com suas respectivas quantidades de atividades
SELECT E.NM_EVENTO, COUNT(A.ID_ATIVIDADE) AS QTDE_ATIVIDADES
FROM TB_EVENTO E
LEFT JOIN TB_ATIVIDADE A ON A.ID_EVENTO = E.ID_EVENTO
GROUP BY E.ID_EVENTO;

-- 4. Atividades com mais de zero instrutor
SELECT A.NM_ATIVIDADE, COUNT(RAI.ID_INSTRUTOR) AS QTDE_INSTRUTORES
FROM TB_ATIVIDADE A
JOIN RL_ATIVIDADE_INSTRUTOR RAI ON A.ID_ATIVIDADE = RAI.ID_ATIVIDADE
GROUP BY A.ID_ATIVIDADE
HAVING COUNT(RAI.ID_INSTRUTOR) > 0;

-- 5. Atividades que aconteceram fora do intervalo de datas de seu evento
SELECT A.*
FROM TB_ATIVIDADE A
JOIN TB_EVENTO E ON E.ID_EVENTO = A.ID_EVENTO
WHERE A.DT_ATIVIDADE < E.DT_INICIO OR A.DT_ATIVIDADE > E.DT_FIM;

-- 6. Participantes que participaram de zero de uma atividade
SELECT P.NM_PARTICIPANTE, COUNT(DISTINCT RPA.ID_ATIVIDADE) AS QTDE_ATIVIDADES
FROM TB_PARTICIPANTE P
JOIN RL_PARTICIPANTE_ATIVIDADE RPA ON RPA.ID_PARTICIPANTE = P.ID_PARTICIPANTE
GROUP BY P.ID_PARTICIPANTE
HAVING COUNT(DISTINCT RPA.ID_ATIVIDADE) > 0;

-- 7. Eventos com mais de 100 participantes somando suas atividades
SELECT E.NM_EVENTO, SUM(QTDE) AS TOTAL_PARTICIPANTES
FROM (
  SELECT A.ID_EVENTO, COUNT(RPA.ID_PARTICIPANTE) AS QTDE
  FROM TB_ATIVIDADE A
  JOIN RL_PARTICIPANTE_ATIVIDADE RPA ON RPA.ID_ATIVIDADE = A.ID_ATIVIDADE
  GROUP BY A.ID_EVENTO, A.ID_ATIVIDADE
) AS SUB
JOIN TB_EVENTO E ON E.ID_EVENTO = SUB.ID_EVENTO
GROUP BY E.ID_EVENTO
HAVING SUM(QTDE) > 100;

-- 8. Participantes que nunca receberam certificado
SELECT P.*
FROM TB_PARTICIPANTE P
LEFT JOIN TB_CERTIFICADO C ON C.ID_PARTICIPANTE = P.ID_PARTICIPANTE
WHERE C.ID_CERTIFICADO IS NULL;

-- 9. Atividades com nota de feedback média inferior a 3
SELECT A.NM_ATIVIDADE, AVG(F.NR_NOTA) AS MEDIA
FROM TB_ATIVIDADE A
JOIN TB_FEEDBACK F ON F.ID_ATIVIDADE = A.ID_ATIVIDADE
GROUP BY A.ID_ATIVIDADE
HAVING AVG(F.NR_NOTA) < 3;

-- 10. Obter o participante com maior quantidade de atividades presenciais
SELECT P.NM_PARTICIPANTE, COUNT(*) AS TOTAL
FROM TB_PARTICIPANTE P
JOIN RL_PARTICIPANTE_ATIVIDADE RPA ON RPA.ID_PARTICIPANTE = P.ID_PARTICIPANTE
WHERE RPA.IS_PRESENTE = TRUE
GROUP BY P.ID_PARTICIPANTE
ORDER BY TOTAL DESC
LIMIT 1;
